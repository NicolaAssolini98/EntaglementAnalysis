Analysis of Deutsch’s Algorithm:
--------
code:
# Deutschâ€™s Algorithm from Static Analysis of Quantum Programs via Gottesman Types, Robert Rand et al.
[a,b]
x(b)
h(a)
h(b)
cx(a,b)
h(a)
m(a)
h(b)

--------
Results:
Start: 
[({'a'}, 1), ({'b'}, 2)]
{1: <L.Z: 2>, 2: <L.Z: 2>}

1: 
[({'a'}, 1), ({'b'}, 2)]
{1: <L.Z: 2>, 2: <L.Z: 2>}

2: 
[({'a'}, 1), ({'b'}, 2)]
{1: <L.X: 3>, 2: <L.Z: 2>}

3: 
[({'a'}, 1), ({'b'}, 2)]
{1: <L.X: 3>, 2: <L.X: 3>}

4: 
[({'a'}, 1), ({'b'}, 2)]
{1: <L.X: 3>, 2: <L.X: 3>}

5: 
[({'a'}, 1), ({'b'}, 2)]
{1: <L.Z: 2>, 2: <L.X: 3>}

6: 
[({'a'}, 1), ({'b'}, 2)]
{1: <L.Z: 2>, 2: <L.X: 3>}

Exit: 
[({'a'}, 1), ({'b'}, 2)]
{1: <L.Z: 2>, 2: <L.Z: 2>}

§§§§§§§§§§§§

Analysis of GHZ:
--------
code:
[a,b,c]
h(a)
cx(a,c)
cx(c,b)



--------
Results:
Start: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>}

1: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>}

2: 
[({'c', 'a'}, 1), ({'b'}, 2)]
{1: <L.X: 3>, 2: <L.Z: 2>}

Exit: 
[({'b', 'c', 'a'}, 1)]
{1: <L.X: 3>}

§§§§§§§§§§§§

Analysis of GHZ and measurement:
--------
code:
[a,b,c]
h(a)
cx(a,c)
cx(c,b)
m(b)


--------
Results:
Start: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>}

1: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>}

2: 
[({'c', 'a'}, 1), ({'b'}, 2)]
{1: <L.X: 3>, 2: <L.Z: 2>}

3: 
[({'b', 'c', 'a'}, 1)]
{1: <L.X: 3>}

Exit: 
[({'b'}, 1), ({'c'}, 2), ({'a'}, 3)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>}

§§§§§§§§§§§§

Analysis of GHZ and measurement 2:
--------
code:
[a,b,c]
h(a)
cx(a,c)
t(a)
cx(c,b)
m(b)


--------
Results:
Start: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>}

1: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>}

2: 
[({'c', 'a'}, 1), ({'b'}, 2)]
{1: <L.X: 3>, 2: <L.Z: 2>}

3: 
[({'c', 'a'}, 1), ({'b'}, 2)]
{1: <L.P: 6>, 2: <L.Z: 2>}

4: 
[({'b', 'c', 'a'}, 1)]
{1: <L.P: 6>}

Exit: 
[({'b'}, 1), ({'c'}, 2), ({'a'}, 3)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>}

§§§§§§§§§§§§

Analysis of GHZ and measurement 3:
--------
code:
[a,b,c]
h(a)
cx(a,c)
h(a)
cx(c,b)
m(b)


--------
Results:
Start: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>}

1: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>}

2: 
[({'c', 'a'}, 1), ({'b'}, 2)]
{1: <L.X: 3>, 2: <L.Z: 2>}

3: 
[({'c'}, 1), ({'b'}, 2), ({'a'}, 1)]
{1: <L.S: 7>, 2: <L.Z: 2>}

4: 
[({'b', 'c'}, 1), ({'a'}, 1)]
{1: <L.S: 7>}

Exit: 
[({'a'}, 1), ({'c'}, 2), ({'b'}, 3)]
{1: <L.Top: 8>, 2: <L.Z: 2>, 3: <L.Z: 2>}

§§§§§§§§§§§§

Analysis of GHZ disantengled:
--------
code:
[a,b,c]
h(a)
cx(a,c)
cx(c,b)
cx(b,a)



--------
Results:
Start: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>}

1: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>}

2: 
[({'c', 'a'}, 1), ({'b'}, 2)]
{1: <L.X: 3>, 2: <L.Z: 2>}

3: 
[({'b', 'c', 'a'}, 1)]
{1: <L.X: 3>}

Exit: 
[({'b', 'c'}, 1), ({'a'}, 2)]
{1: <L.X: 3>, 2: <L.Z: 2>}

§§§§§§§§§§§§

Analysis of GHZ disantengled 2 (paper example 1):
--------
code:
[a,b,c]
h(a)
cx(a, b)
cx(a, c)
cx(c, b)
t(b)
cx(c, a)



--------
Results:
Start: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>}

1: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>}

2: 
[({'b', 'a'}, 1), ({'c'}, 3)]
{1: <L.X: 3>, 3: <L.Z: 2>}

3: 
[({'b', 'c', 'a'}, 1)]
{1: <L.X: 3>}

4: 
[({'c', 'a'}, 1), ({'b'}, 2)]
{1: <L.X: 3>, 2: <L.Z: 2>}

5: 
[({'c', 'a'}, 1), ({'b'}, 2)]
{1: <L.X: 3>, 2: <L.Z: 2>}

Exit: 
[({'c'}, 1), ({'b'}, 2), ({'a'}, 3)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>}

§§§§§§§§§§§§

Analysis of oracle with uncomputation:
--------
code:
# using a temporary variable 'a' with uncomputation

[x,y,a,r]
h(x)
x(y)
cx(x,a)
cx(y,a)
cx(a,r)
cx(y,a)
cx(x,a)


--------
Results:
Start: 
[({'x'}, 1), ({'y'}, 2), ({'a'}, 3), ({'r'}, 4)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>, 4: <L.Z: 2>}

1: 
[({'x'}, 1), ({'y'}, 2), ({'a'}, 3), ({'r'}, 4)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>, 4: <L.Z: 2>}

2: 
[({'x'}, 1), ({'y'}, 2), ({'a'}, 3), ({'r'}, 4)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>, 4: <L.Z: 2>}

3: 
[({'x', 'a'}, 1), ({'y'}, 2), ({'r'}, 4)]
{1: <L.X: 3>, 2: <L.Z: 2>, 4: <L.Z: 2>}

4: 
[({'x', 'a'}, 1), ({'y'}, 2), ({'r'}, 4)]
{1: <L.X: 3>, 2: <L.Z: 2>, 4: <L.Z: 2>}

5: 
[({'r', 'x', 'a'}, 1), ({'y'}, 2)]
{1: <L.X: 3>, 2: <L.Z: 2>}

6: 
[({'r', 'x', 'a'}, 1), ({'y'}, 2)]
{1: <L.X: 3>, 2: <L.Z: 2>}

Exit: 
[({'r', 'x'}, 1), ({'y'}, 2), ({'a'}, 3)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>}

§§§§§§§§§§§§

Analysis of oracle with uncomputation in loop:
--------
code:
# using a temporary variable 'a' with uncomputation
# in this case, since we don't have information about the loop, we have a lost of precision

[x,y,a,r]
h(x)
x(y)
loop:
    cx(x,a)
    cx(y,a)
    cx(a,r)
    cx(y,a)
    cx(x,a)


--------
Results:
Start: 
[({'x'}, 1), ({'y'}, 2), ({'a'}, 3), ({'r'}, 4)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>, 4: <L.Z: 2>}

1: 
[({'x'}, 1), ({'y'}, 2), ({'a'}, 3), ({'r'}, 4)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>, 4: <L.Z: 2>}

2: 
[({'x'}, 0), ({'y'}, 1), ({'a'}, 0), ({'r'}, 0)]
{0: <L.Top: 8>, 1: <L.Z: 2>}

Exit: 
[({'x'}, 0), ({'y'}, 1), ({'a'}, 0), ({'r'}, 0)]
{0: <L.Top: 8>, 1: <L.Z: 2>}

4: 
[({'x'}, 0), ({'y'}, 1), ({'a'}, 0), ({'r'}, 0)]
{0: <L.Top: 8>, 1: <L.Z: 2>}

5: 
[({'y'}, 1), ({'x'}, 0), ({'a'}, 0), ({'r'}, 0)]
{1: <L.Z: 2>, 0: <L.Top: 8>}

6: 
[({'y'}, 1), ({'x'}, 0), ({'a'}, 0), ({'r'}, 0)]
{1: <L.Z: 2>, 0: <L.Top: 8>}

7: 
[({'y'}, 1), ({'x'}, 0), ({'a'}, 0), ({'r'}, 0)]
{1: <L.Z: 2>, 0: <L.Top: 8>}

8: 
[({'y'}, 1), ({'x'}, 0), ({'a'}, 0), ({'r'}, 0)]
{1: <L.Z: 2>, 0: <L.Top: 8>}

§§§§§§§§§§§§

Analysis of oracle without uncomputation:
--------
code:
# using a temporary variable 'a' without uncomputation

[x,y,a,r]
h(x)
x(y)
cx(x,a)
cx(y,a)
cx(a,r)


--------
Results:
Start: 
[({'x'}, 1), ({'y'}, 2), ({'a'}, 3), ({'r'}, 4)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>, 4: <L.Z: 2>}

1: 
[({'x'}, 1), ({'y'}, 2), ({'a'}, 3), ({'r'}, 4)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>, 4: <L.Z: 2>}

2: 
[({'x'}, 1), ({'y'}, 2), ({'a'}, 3), ({'r'}, 4)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>, 4: <L.Z: 2>}

3: 
[({'x', 'a'}, 1), ({'y'}, 2), ({'r'}, 4)]
{1: <L.X: 3>, 2: <L.Z: 2>, 4: <L.Z: 2>}

4: 
[({'x', 'a'}, 1), ({'y'}, 2), ({'r'}, 4)]
{1: <L.X: 3>, 2: <L.Z: 2>, 4: <L.Z: 2>}

Exit: 
[({'r', 'x', 'a'}, 1), ({'y'}, 2)]
{1: <L.X: 3>, 2: <L.Z: 2>}

§§§§§§§§§§§§

Analysis of second example from paper:
--------
code:
[a,b,c]
h(a)
cx(a, b)
h(c)
if b:
    cx(a, c)
else:
    cx(c, b)

--------
Results:
Start: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>}

1: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>}

2: 
[({'b', 'a'}, 1), ({'c'}, 3)]
{1: <L.X: 3>, 3: <L.Z: 2>}

3: 
[({'b', 'a'}, 1), ({'c'}, 3)]
{1: <L.X: 3>, 3: <L.X: 3>}

Exit: 
[({'b'}, 0), ({'c'}, 0), ({'a'}, 1)]
{0: <L.Top: 8>, 1: <L.Z: 2>}

5: 
[({'b'}, 1), ({'c'}, 3), ({'a'}, 4)]
{1: <L.Z: 2>, 3: <L.X: 3>, 4: <L.Z: 2>}

7: 
[({'b'}, 1), ({'c'}, 3), ({'a'}, 4)]
{1: <L.Z: 2>, 3: <L.X: 3>, 4: <L.Z: 2>}

§§§§§§§§§§§§

Analysis of superdense:
--------
code:
[x,y,a,b]
# Super dense coding from Static Analysis of Quantum Programs via Gottesman Types, Robert Rand et al.

# x and y are classical bit, here we represent it as measured qubits
input(x)
input(y)
m(x)
m(y)

h(a)
cx(a,b)
if x:
    z(a)
if y:
    x(a)
cx(a,b)
h(a)


--------
Results:
Start: 
[({'x'}, 1), ({'y'}, 2), ({'a'}, 3), ({'b'}, 4)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>, 4: <L.Z: 2>}

1: 
[({'x'}, 1), ({'y'}, 2), ({'a'}, 3), ({'b'}, 4)]
{1: <L.Top: 8>, 2: <L.Z: 2>, 3: <L.Z: 2>, 4: <L.Z: 2>}

2: 
[({'x'}, 1), ({'y'}, 2), ({'a'}, 3), ({'b'}, 4)]
{1: <L.Top: 8>, 2: <L.Top: 8>, 3: <L.Z: 2>, 4: <L.Z: 2>}

3: 
[({'x'}, 1), ({'y'}, 2), ({'a'}, 3), ({'b'}, 4)]
{1: <L.Z: 2>, 2: <L.Top: 8>, 3: <L.Z: 2>, 4: <L.Z: 2>}

4: 
[({'x'}, 1), ({'y'}, 2), ({'a'}, 3), ({'b'}, 4)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>, 4: <L.Z: 2>}

5: 
[({'x'}, 1), ({'y'}, 2), ({'a'}, 3), ({'b'}, 4)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.X: 3>, 4: <L.Z: 2>}

6: 
[({'x'}, 1), ({'y'}, 2), ({'b', 'a'}, 3)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.X: 3>}

7: 
[({'x'}, 0), ({'y'}, 1), ({'b', 'a'}, 2)]
{0: <L.Z: 2>, 1: <L.Z: 2>, 2: <L.X: 3>}

8: 
[({'x'}, 1), ({'y'}, 2), ({'b', 'a'}, 3)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.X: 3>}

11: 
[({'x'}, 0), ({'y'}, 1), ({'b', 'a'}, 2)]
{0: <L.Z: 2>, 1: <L.Z: 2>, 2: <L.X: 3>}

12: 
[({'x'}, 0), ({'y'}, 1), ({'b', 'a'}, 2)]
{0: <L.Z: 2>, 1: <L.Z: 2>, 2: <L.X: 3>}

15: 
[({'x'}, 0), ({'y'}, 1), ({'a'}, 2), ({'b'}, 3)]
{0: <L.Z: 2>, 1: <L.Z: 2>, 2: <L.X: 3>, 3: <L.Z: 2>}

Exit: 
[({'x'}, 0), ({'y'}, 1), ({'a'}, 2), ({'b'}, 3)]
{0: <L.Z: 2>, 1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>}

§§§§§§§§§§§§

Analysis of teleport:
--------
code:
[a,b,c,d]
# Example from 'Quantum Entanglement Analysis based on Abstract Interpretation', 2008, Simon Perdrix
# we teleport a that is entangled with d
h(a)
cx(a,d)
h(b)
cx(b,c)
cx(a,b)
h(a)
if b:
    x(c)
if a:
    z(c)

# at the end, a and d are entangled, as our analysis predict





--------
Results:
Start: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3), ({'d'}, 4)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>, 4: <L.Z: 2>}

1: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3), ({'d'}, 4)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>, 4: <L.Z: 2>}

2: 
[({'d', 'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.X: 3>, 2: <L.Z: 2>, 3: <L.Z: 2>}

3: 
[({'d', 'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.X: 3>, 2: <L.X: 3>, 3: <L.Z: 2>}

4: 
[({'d', 'a'}, 1), ({'b', 'c'}, 2)]
{1: <L.X: 3>, 2: <L.X: 3>}

5: 
[({'d', 'a'}, 1), ({'c'}, 1), ({'b'}, 1)]
{1: <L.Top: 8>}

6: 
[({'d'}, 1), ({'c'}, 1), ({'b'}, 1), ({'a'}, 1)]
{1: <L.S: 7>}

7: 
[({'d'}, 0), ({'c'}, 0), ({'a'}, 0), ({'b'}, 1)]
{0: <L.Top: 8>, 1: <L.Z: 2>}

8: 
[({'d'}, 1), ({'c'}, 1), ({'a'}, 1), ({'b'}, 2)]
{1: <L.Top: 8>, 2: <L.Z: 2>}

Exit: 
[({'d'}, 0), ({'c'}, 0), ({'b'}, 1), ({'a'}, 2)]
{0: <L.Top: 8>, 1: <L.Z: 2>, 2: <L.Z: 2>}

12: 
[({'d'}, 0), ({'c'}, 0), ({'b'}, 1), ({'a'}, 2)]
{0: <L.Top: 8>, 1: <L.Z: 2>, 2: <L.Z: 2>}

§§§§§§§§§§§§

Analysis of while loop refactor:
--------
code:
# while loop example

[a,b,c]
h(b)
cx(b,c)
h(a)
t(a)
while a:
    h(a)
    cx(b,c)

--------
Results:
Start: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.Z: 2>, 2: <L.Z: 2>, 3: <L.Z: 2>}

1: 
[({'a'}, 1), ({'b'}, 2), ({'c'}, 3)]
{1: <L.Z: 2>, 2: <L.X: 3>, 3: <L.Z: 2>}

2: 
[({'a'}, 1), ({'b', 'c'}, 2)]
{1: <L.Z: 2>, 2: <L.X: 3>}

3: 
[({'a'}, 1), ({'b', 'c'}, 2)]
{1: <L.X: 3>, 2: <L.X: 3>}

4: 
[({'a'}, 0), ({'b'}, 1), ({'c'}, 1)]
{0: <L.S: 7>, 1: <L.Top: 8>}

Exit: 
[({'a'}, 0), ({'b'}, 1), ({'c'}, 1)]
{0: <L.Z: 2>, 1: <L.Top: 8>}

6: 
[({'a'}, 0), ({'b'}, 1), ({'c'}, 1)]
{0: <L.Z: 2>, 1: <L.Top: 8>}

7: 
[({'a'}, 0), ({'b'}, 1), ({'c'}, 1)]
{0: <L.X: 3>, 1: <L.Top: 8>}

§§§§§§§§§§§§

